name: CI

on:
  push:
    branches: [dev]
    paths-ignore: ['**.md', 'LICENSE', '.nvmrc']

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18.12'

      - name: Install dependencies
        run: yarn install --ignore-scripts

      - name: Run unit tests
        run: yarn run test

      - name: Build package
        run: yarn run build

      - name: Persist build results
        uses: actions/upload-artifact@v3
        with:
          name: spark-ts-sdk
          path: lib

  cspark-sdk:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        node: ['14.15.0', '16.0.0']
        exclude:
          - os: macOS-latest
            node: '14.15.0'

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Install @cspark/sdk dependencies
        run: npm install --ignore-scripts

      - name: Analyze codebase
        run: npm run lint

      - name: Run unit tests
        run: npm test

  cspark-wasm:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        node: ['14.15.0', '16.0.0', '18.0.0']
        exclude:
          - os: macOS-latest
            node: '14.15.0'

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Download SDK build from artifact
        uses: actions/download-artifact@v4
        with:
          name: spark-ts-sdk

      - name: Install dependencies
        run: |
          cd packages/wasm
          npm install --ignore-scripts

      - name: Analyze codebase
        run: npm run lint

      - name: Run unit tests
        run: npm test
